---
openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  "/api/v1/knockers":
    get:
      tags:
      - Knockers
      summary: List Knockers
      operationId: list_knockers_api_v1_knockers_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/Knocker"
                type: array
                title: Response List Knockers Api V1 Knockers Get
    post:
      tags:
      - Knockers
      summary: Create Knocker
      operationId: create_knocker_api_v1_knockers_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewKnocker"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Knocker"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/knockers/{id}":
    get:
      tags:
      - Knockers
      summary: Get Knocker By Id
      operationId: get_knocker_by_id_api_v1_knockers__id__get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Knocker"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    put:
      tags:
      - Knockers
      summary: Update Knocker
      operationId: update_knocker_api_v1_knockers__id__put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatedKnocker"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Knocker"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
      - Knockers
      summary: Delete Knocker
      operationId: delete_knocker_api_v1_knockers__id__delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/knockers/{id}/checkin":
    post:
      tags:
      - Knockers
      summary: Knocker Checkin
      operationId: knocker_checkin_api_v1_knockers__id__checkin_post
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Test"
                title: Response Knocker Checkin Api V1 Knockers  Id  Checkin Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/knocks":
    get:
      tags:
      - Knocks
      summary: List Knocks
      operationId: list_knocks_api_v1_knocks_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/Knock"
                type: array
                title: Response List Knocks Api V1 Knocks Get
    post:
      tags:
      - Knocks
      summary: Create Knock
      operationId: create_knock_api_v1_knocks_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewKnock"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Knock"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/knocks/{id}":
    get:
      tags:
      - Knocks
      summary: Get Knock By Id
      operationId: get_knock_by_id_api_v1_knocks__id__get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Knock"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    put:
      tags:
      - Knocks
      summary: Update Knock
      operationId: update_knock_api_v1_knocks__id__put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatedKnock"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Knock"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
      - Knocks
      summary: Delete Knock
      operationId: delete_knock_api_v1_knocks__id__delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/runners":
    get:
      tags:
      - Runners
      summary: List Runners
      operationId: list_runners_api_v1_runners_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/Runner"
                type: array
                title: Response List Runners Api V1 Runners Get
    post:
      tags:
      - Runners
      summary: Create Runner
      operationId: create_runner_api_v1_runners_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewRunner"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Runner"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/runners/{id}":
    get:
      tags:
      - Runners
      summary: Get Runner By Id
      operationId: get_runner_by_id_api_v1_runners__id__get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Runner"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    put:
      tags:
      - Runners
      summary: Update Runner
      operationId: update_runner_api_v1_runners__id__put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatedRunner"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Runner"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
      - Runners
      summary: Delete Runner
      operationId: delete_runner_api_v1_runners__id__delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/results":
    get:
      tags:
      - Results
      summary: List Results
      operationId: list_results_api_v1_results_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/Result"
                type: array
                title: Response List Results Api V1 Results Get
    post:
      tags:
      - Results
      summary: Create Result
      operationId: create_result_api_v1_results_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewResult"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/results/{id}":
    get:
      tags:
      - Results
      summary: Get Result By Id
      operationId: get_result_by_id_api_v1_results__id__get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    put:
      tags:
      - Results
      summary: Update Result
      operationId: update_result_api_v1_results__id__put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatedResult"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Result"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
      - Results
      summary: Delete Result
      operationId: delete_result_api_v1_results__id__delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/monitors":
    get:
      tags:
      - Monitors
      summary: List Monitors
      operationId: list_monitors_api_v1_monitors_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/Monitor"
                type: array
                title: Response List Monitors Api V1 Monitors Get
    post:
      tags:
      - Monitors
      summary: Create Monitor
      operationId: create_monitor_api_v1_monitors_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewMonitor"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Monitor"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/monitors/{id}":
    get:
      tags:
      - Monitors
      summary: Get Monitor By Id
      operationId: get_monitor_by_id_api_v1_monitors__id__get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Monitor"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    put:
      tags:
      - Monitors
      summary: Update Monitor
      operationId: update_monitor_api_v1_monitors__id__put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatedMonitor"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Monitor"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
      - Monitors
      summary: Delete Monitor
      operationId: delete_monitor_api_v1_monitors__id__delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/responses":
    get:
      tags:
      - Responses
      summary: List Responses
      operationId: list_responses_api_v1_responses_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/Response"
                type: array
                title: Response List Responses Api V1 Responses Get
    post:
      tags:
      - Responses
      summary: Create Response
      operationId: create_response_api_v1_responses_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewResponse"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/responses/{id}":
    get:
      tags:
      - Responses
      summary: Get Response By Id
      operationId: get_response_by_id_api_v1_responses__id__get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    put:
      tags:
      - Responses
      summary: Update Response
      operationId: update_response_api_v1_responses__id__put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatedResponse"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
      - Responses
      summary: Delete Response
      operationId: delete_response_api_v1_responses__id__delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/response-expectations":
    get:
      tags:
      - ResponseExpectations
      summary: List Response Expectations
      operationId: list_response_expectations_api_v1_response_expectations_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/ResponseExpectation"
                type: array
                title: Response List Response Expectations Api V1 Response Expectations
                  Get
    post:
      tags:
      - ResponseExpectations
      summary: Create Response Expectation
      operationId: create_response_expectation_api_v1_response_expectations_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewResponseExpectation"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ResponseExpectation"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/response-expectations/{id}":
    get:
      tags:
      - ResponseExpectations
      summary: Get Response Expectation By Id
      operationId: get_response_expectation_by_id_api_v1_response_expectations__id__get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ResponseExpectation"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    put:
      tags:
      - ResponseExpectations
      summary: Update Response Expectation
      operationId: update_response_expectation_api_v1_response_expectations__id__put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatedResponseExpectation"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ResponseExpectation"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
      - ResponseExpectations
      summary: Delete Response Expectation
      operationId: delete_response_expectation_api_v1_response_expectations__id__delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/test-configurations":
    get:
      tags:
      - TestConfigurations
      summary: List Test Configurations
      operationId: list_test_configurations_api_v1_test_configurations_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/TestConfiguration"
                type: array
                title: Response List Test Configurations Api V1 Test Configurations
                  Get
    post:
      tags:
      - TestConfigurations
      summary: Create Test Configuration
      operationId: create_test_configuration_api_v1_test_configurations_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewTestConfiguration"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TestConfiguration"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/test-configurations/{id}":
    get:
      tags:
      - TestConfigurations
      summary: Get Test Configuration By Id
      operationId: get_test_configuration_by_id_api_v1_test_configurations__id__get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TestConfiguration"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    put:
      tags:
      - TestConfigurations
      summary: Update Test Configuration
      operationId: update_test_configuration_api_v1_test_configurations__id__put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatedTestConfiguration"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TestConfiguration"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
      - TestConfigurations
      summary: Delete Test Configuration
      operationId: delete_test_configuration_api_v1_test_configurations__id__delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/test-component-statuses":
    get:
      tags:
      - TestComponentStatuses
      summary: List Test Component Statuses
      operationId: list_test_component_statuses_api_v1_test_component_statuses_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/TestComponentStatus"
                type: array
                title: Response List Test Component Statuses Api V1 Test Component
                  Statuses Get
    post:
      tags:
      - TestComponentStatuses
      summary: Create Test Component Status
      operationId: create_test_component_status_api_v1_test_component_statuses_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewTestComponentStatus"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TestComponentStatus"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/test-component-statuses/{id}":
    get:
      tags:
      - TestComponentStatuses
      summary: Get Test Component Status By Id
      operationId: get_test_component_status_by_id_api_v1_test_component_statuses__id__get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TestComponentStatus"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    put:
      tags:
      - TestComponentStatuses
      summary: Update Test Component Status
      operationId: update_test_component_status_api_v1_test_component_statuses__id__put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatedTestComponentStatus"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TestComponentStatus"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
      - TestComponentStatuses
      summary: Delete Test Component Status
      operationId: delete_test_component_status_api_v1_test_component_statuses__id__delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/tests":
    get:
      tags:
      - Tests
      summary: List Tests
      operationId: list_tests_api_v1_tests_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/Test"
                type: array
                title: Response List Tests Api V1 Tests Get
    post:
      tags:
      - Tests
      summary: Create Test
      operationId: create_test_api_v1_tests_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewTest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Test"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/tests/{id}":
    get:
      tags:
      - Tests
      summary: Get Test By Id
      operationId: get_test_by_id_api_v1_tests__id__get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Test"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
      - Tests
      summary: Delete Test
      operationId: delete_test_api_v1_tests__id__delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/tests/{id}/add_component_status/{status_id}":
    put:
      tags:
      - Tests
      summary: Add Test Component Status
      operationId: add_test_component_status_api_v1_tests__id__add_component_status__status_id__put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      - name: status_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Status Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Test"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/test-suites":
    get:
      tags:
      - TestSuites
      summary: List Test Suites
      operationId: list_test_suites_api_v1_test_suites_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/TestSuite"
                type: array
                title: Response List Test Suites Api V1 Test Suites Get
    post:
      tags:
      - TestSuites
      summary: Create Test Suite
      operationId: create_test_suite_api_v1_test_suites_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewTestSuite"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TestSuite"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/test-suites/{id}":
    get:
      tags:
      - TestSuites
      summary: Get Test Suite By Id
      operationId: get_test_suite_by_id_api_v1_test_suites__id__get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TestSuite"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    put:
      tags:
      - TestSuites
      summary: Update Test Suite
      operationId: update_test_suite_api_v1_test_suites__id__put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatedTestSuite"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TestSuite"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
      - TestSuites
      summary: Delete Test Suite
      operationId: delete_test_suite_api_v1_test_suites__id__delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
components:
  schemas:
    ComponentStatus:
      type: integer
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      title: ComponentStatus
    ComponentType:
      type: integer
      enum:
      - 1
      - 2
      title: ComponentType
    HTTPValidationError:
      properties:
        detail:
          items:
            "$ref": "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Knock:
      properties:
        name:
          type: string
          title: Name
        runner_id:
          type: string
          format: uuid
          title: Runner Id
        command:
          type: string
          title: Command
        description:
          type: string
          title: Description
          default: ''
        id:
          type: string
          format: uuid
          title: Id
        result_ids:
          items:
            type: string
            format: uuid
          type: array
          title: Result Ids
      type: object
      required:
      - name
      - runner_id
      - command
      title: Knock
    Knocker:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
          default: ''
        id:
          type: string
          format: uuid
          title: Id
        last_seen:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Seen
      type: object
      required:
      - name
      title: Knocker
    Monitor:
      properties:
        name:
          type: string
          title: Name
        type:
          "$ref": "#/components/schemas/MonitorType"
        description:
          type: string
          title: Description
          default: ''
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
      - name
      - type
      title: Monitor
    MonitorType:
      type: integer
      enum:
      - 1
      - 2
      title: MonitorType
    NewKnock:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        runner_id:
          type: string
          format: uuid
          title: Runner Id
        command:
          type: string
          title: Command
        result_ids:
          anyOf:
          - items:
              type: string
              format: uuid
            type: array
          - type: 'null'
          title: Result Ids
      type: object
      required:
      - name
      - description
      - runner_id
      - command
      - result_ids
      title: NewKnock
    NewKnocker:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
      type: object
      required:
      - name
      - description
      title: NewKnocker
    NewMonitor:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        type:
          "$ref": "#/components/schemas/MonitorType"
      type: object
      required:
      - name
      - description
      - type
      title: NewMonitor
    NewResponse:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        monitor_id:
          type: string
          format: uuid
          title: Monitor Id
        monitor_parameters:
          additionalProperties:
            type: string
          type: object
          title: Monitor Parameters
      type: object
      required:
      - name
      - description
      - monitor_id
      - monitor_parameters
      title: NewResponse
    NewResponseExpectation:
      properties:
        response_id:
          type: string
          format: uuid
          title: Response Id
        expected:
          type: boolean
          title: Expected
        timeout:
          type: integer
          title: Timeout
      type: object
      required:
      - response_id
      - expected
      - timeout
      title: NewResponseExpectation
    NewResult:
      properties:
        type:
          "$ref": "#/components/schemas/ResultType"
        value:
          type: string
          title: Value
      type: object
      required:
      - type
      - value
      title: NewResult
    NewRunner:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        image_name:
          type: string
          title: Image Name
        image_tag:
          type: string
          title: Image Tag
      type: object
      required:
      - name
      - description
      - image_name
      - image_tag
      title: NewRunner
    NewTest:
      properties:
        configuration_id:
          type: string
          format: uuid
          title: Configuration Id
        knocker_id:
          type: string
          format: uuid
          title: Knocker Id
      type: object
      required:
      - configuration_id
      - knocker_id
      title: NewTest
    NewTestComponentStatus:
      properties:
        component_id:
          type: string
          format: uuid
          title: Component Id
        component_type:
          "$ref": "#/components/schemas/ComponentType"
        status:
          "$ref": "#/components/schemas/ComponentStatus"
      type: object
      required:
      - component_id
      - component_type
      - status
      title: NewTestComponentStatus
    NewTestConfiguration:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        knock_ids:
          anyOf:
          - items:
              type: string
              format: uuid
            type: array
          - type: 'null'
          title: Knock Ids
        response_expectation_ids:
          anyOf:
          - items:
              type: string
              format: uuid
            type: array
          - type: 'null'
          title: Response Expectation Ids
      type: object
      required:
      - name
      - description
      - knock_ids
      - response_expectation_ids
      title: NewTestConfiguration
    NewTestSuite:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        test_configuration_ids:
          anyOf:
          - items:
              type: string
              format: uuid
            type: array
          - type: 'null'
          title: Test Configuration Ids
      type: object
      required:
      - name
      - description
      - test_configuration_ids
      title: NewTestSuite
    Response:
      properties:
        name:
          type: string
          title: Name
        monitor_id:
          type: string
          format: uuid
          title: Monitor Id
        monitor_parameters:
          additionalProperties:
            type: string
          type: object
          title: Monitor Parameters
        description:
          type: string
          title: Description
          default: ''
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
      - name
      - monitor_id
      - monitor_parameters
      title: Response
    ResponseExpectation:
      properties:
        response_id:
          type: string
          format: uuid
          title: Response Id
        expected:
          type: boolean
          title: Expected
        timeout:
          type: integer
          title: Timeout
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
      - response_id
      - expected
      - timeout
      title: ResponseExpectation
    Result:
      properties:
        type:
          "$ref": "#/components/schemas/ResultType"
        value:
          type: string
          title: Value
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
      - type
      - value
      title: Result
    ResultType:
      type: integer
      enum:
      - 1
      - 2
      - 3
      title: ResultType
    Runner:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        image_name:
          type: string
          title: Image Name
        image_tag:
          type: string
          title: Image Tag
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
      - name
      - description
      - image_name
      - image_tag
      title: Runner
    Test:
      properties:
        configuration_id:
          type: string
          format: uuid
          title: Configuration Id
        knocker_id:
          type: string
          format: uuid
          title: Knocker Id
        id:
          type: string
          format: uuid
          title: Id
        started:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Started
        ended:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Ended
        status:
          allOf:
          - "$ref": "#/components/schemas/TestStatus"
          default: 1
        component_status_ids:
          items:
            type: string
            format: uuid
          type: array
          title: Component Status Ids
      type: object
      required:
      - configuration_id
      - knocker_id
      title: Test
    TestComponentStatus:
      properties:
        component_id:
          type: string
          format: uuid
          title: Component Id
        component_type:
          "$ref": "#/components/schemas/ComponentType"
        status:
          "$ref": "#/components/schemas/ComponentStatus"
        id:
          type: string
          format: uuid
          title: Id
        updated:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Updated
      type: object
      required:
      - component_id
      - component_type
      - status
      title: TestComponentStatus
    TestConfiguration:
      properties:
        name:
          type: string
          title: Name
        id:
          type: string
          format: uuid
          title: Id
        description:
          type: string
          title: Description
          default: ''
        knock_ids:
          items:
            type: string
            format: uuid
          type: array
          title: Knock Ids
        response_expectation_ids:
          items:
            type: string
            format: uuid
          type: array
          title: Response Expectation Ids
      type: object
      required:
      - name
      title: TestConfiguration
    TestStatus:
      type: integer
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      title: TestStatus
    TestSuite:
      properties:
        name:
          type: string
          title: Name
        id:
          type: string
          format: uuid
          title: Id
        description:
          type: string
          title: Description
          default: ''
        test_cofiguration_ids:
          items:
            type: string
            format: uuid
          type: array
          title: Test Cofiguration Ids
      type: object
      required:
      - name
      title: TestSuite
    UpdatedKnock:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        runner_id:
          type: string
          format: uuid
          title: Runner Id
        command:
          type: string
          title: Command
        result_ids:
          anyOf:
          - items:
              type: string
              format: uuid
            type: array
          - type: 'null'
          title: Result Ids
      type: object
      required:
      - name
      - description
      - runner_id
      - command
      - result_ids
      title: UpdatedKnock
    UpdatedKnocker:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
      type: object
      required:
      - name
      - description
      title: UpdatedKnocker
    UpdatedMonitor:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
      type: object
      required:
      - name
      - description
      title: UpdatedMonitor
    UpdatedResponse:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        monitor_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Monitor Id
        monitor_parameters:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          title: Monitor Parameters
      type: object
      required:
      - name
      - description
      - monitor_id
      - monitor_parameters
      title: UpdatedResponse
    UpdatedResponseExpectation:
      properties:
        expected:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Expected
        timeout:
          anyOf:
          - type: integer
          - type: 'null'
          title: Timeout
      type: object
      required:
      - expected
      - timeout
      title: UpdatedResponseExpectation
    UpdatedResult:
      properties:
        value:
          type: string
          title: Value
      type: object
      required:
      - value
      title: UpdatedResult
    UpdatedRunner:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        image_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Image Name
        image_tag:
          anyOf:
          - type: string
          - type: 'null'
          title: Image Tag
      type: object
      required:
      - name
      - description
      - image_name
      - image_tag
      title: UpdatedRunner
    UpdatedTestComponentStatus:
      properties:
        status:
          "$ref": "#/components/schemas/ComponentStatus"
      type: object
      required:
      - status
      title: UpdatedTestComponentStatus
    UpdatedTestConfiguration:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        knock_ids:
          anyOf:
          - items:
              type: string
              format: uuid
            type: array
          - type: 'null'
          title: Knock Ids
        response_expectation_ids:
          anyOf:
          - items:
              type: string
              format: uuid
            type: array
          - type: 'null'
          title: Response Expectation Ids
      type: object
      required:
      - name
      - description
      - knock_ids
      - response_expectation_ids
      title: UpdatedTestConfiguration
    UpdatedTestSuite:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        test_configuration_ids:
          anyOf:
          - items:
              type: string
              format: uuid
            type: array
          - type: 'null'
          title: Test Configuration Ids
      type: object
      required:
      - name
      - description
      - test_configuration_ids
      title: UpdatedTestSuite
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
